''
'' A dark blue style from "Red Dress"
''
'' Original Author: https://github.com/Drakemor
'' https://github.com/Drakemor/RedDress-PlantUML
''

!$THEME = "reddress-darkblue"

!if %not(%variable_exists("$BGCOLOR"))
!$BGCOLOR = "transparent"
!endif

!if (%not(%variable_exists("$FONTNAME")))
!$FONTNAME = "Verdana"
!endif

!if (%not(%variable_exists("$FONTSIZE")))
!$FONTSIZE = 11
!endif

!$ACCENT = "1a66c2"
!$ACCENTTRANSPARENT = "1a66c277"
!$ACCENTDARK = "002642"
!$PRIMARYFONTCOLOR = "FFFFFF"
!$SECONDARYFONTCOLOR = "AAAAAA"
!$ARROWCOLOR = "FFFFFF"
!$ARROWFONTCOLOR = "BBBBBB"
!$BORDERCOLOR = "1b1b1b"
!$BOXBG = "2e2e2e"
!$LIGHTBORDERCOLOR = "767676"
!$LIGHTBG = "575757"
!$SUCCESS = "#4CAF50"
!$WARNING = "#ff9800"
!$DANGER = "#F44336"

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'' Global Values
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

skinparam backgroundColor $BGCOLOR
skinparam stereotypeCBackgroundColor $ACCENT

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'' Procedures
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

!procedure $success($msg)
  <font color=$SUCCESS><b>$msg
!endprocedure

!procedure $failure($msg)
  <font color=$DANGER><b>$msg
!endprocedure

!procedure $warning($msg)
  <font color=$WARNING><b>$msg
!endprocedure

!procedure basic_style()
  fontColor $PRIMARYFONTCOLOR
  fontName $FONTNAME
  fontSize $FONTSIZE
  stereotypeFontColor $SECONDARYFONTCOLOR
  stereotypeFontSize $FONTSIZE
  backgroundColor $BOXBG
  borderColor $BORDERCOLOR
!endprocedure

!procedure light_style()
  backgroundColor $LIGHTBG
  borderColor $LIGHTBORDERCOLOR
!endprocedure

!procedure accent_style()
  backgroundColor $ACCENT
  borderColor $ACCENTDARK
!endprocedure

!procedure arrow_style()
  arrowColor $ARROWCOLOR
  arrowFontName $FONTNAME
  arrowFontColor $ARROWFONTCOLOR
  arrowFontSize $FONTSIZE
!endprocedure

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'' Style Settings
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

<style>
  root {
    BackGroundColor $BGCOLOR
    FontColor $PRIMARYFONTCOLOR
  }
  node {
    BackGroundColor $BOXBG
    LineColor $BORDERCOLOR
    FontName $FONTNAME
    FontColor $PRIMARYFONTCOLOR
    FontSize $FONTSIZE
    RoundCorner 0
    LineThickness 2
    separator {
      LineThickness 0.5
      LineColor $LIGHTBORDERCOLOR
    }
  }
  arrow {
    BackGroundColor lightblue
    LineColor $ARROWCOLOR
    LineThickness 2
    LineStyle 2-5
  }
  highlight {
    BackGroundColor $ACCENT
    FontColor $PRIMARYFONTCOLOR
    FontStyle italic
  }
</style>


' Class diagrams

skinparam circledCharacter {
  radius 8
  fontSize $FONTSIZE
  fontName $FONTNAME
}

skinparam class {
  basic_style()
  arrow_style()

  attributeFontColor $SECONDARYFONTCOLOR
  attributeFontSize $FONTSIZE
  attributeIconSize $FONTSIZE
}

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'' Sequence diagrams
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
!startsub sequence

skinparam sequence {
	BorderColor $BORDERCOLOR
	' For some reason sequence title font color does not pick up from global
	TitleFontColor $PRIMARYFONTCOLOR
	StartColor $PRIMARYFONTCOLOR
	EndColor $PRIMARYFONTCOLOR
	''
	BoxBackgroundColor $LIGHTBG
	BoxBorderColor $BORDERCOLOR
	BoxFontColor $PRIMARYFONTCOLOR
	''
	DelayFontColor $SECONDARYFONTCOLOR
	''
	LifeLineBorderColor $ARROWCOLOR
	LifeLineBorderThickness 2
	LifeLineBackgroundColor $BORDERCOLOR
	''
	GroupBorderColor $BORDERCOLOR
	GroupBackgroundColor $ACCENT
	GroupFontColor $SECONDARYFONTCOLOR
	GroupHeaderFontColor $PRIMARYFONTCOLOR
	''
	DividerBackgroundColor $ACCENT
    DividerBorderColor $BORDERCOLOR
    DividerBorderThickness 2
    DividerFontColor $PRIMARYFONTCOLOR
	''
	ReferenceBackgroundColor $ACCENTDARK
	ReferenceBorderColor $BORDERCOLOR
	ReferenceFontColor $PRIMARYFONTCOLOR
	ReferenceHeaderFontColor $PRIMARYFONTCOLOR
	''
	StereotypeFontColor $PRIMARYFONTCOLOR
}
!endsub

skinparam actor {
  basic_style()
  accent_style()
}

skinparam participant {
  basic_style()
}

skinparam collections {
  basic_style()
}

' Component diagrams

skinparam interface {
  basic_style()
  accent_style()
}

skinparam component {
  basic_style()
}

skinparam node {
  basic_style()
}

skinparam database {
  basic_style()
}

skinparam queue {
  basic_style()
}

' Use Case diagrams

skinparam usecase {
  basic_style()
  arrow_style()
}

skinparam activity {
  basic_style()
  arrow_style()
}

skinparam boundary {
  basic_style()
  accent_style()
}

skinparam control {
  basic_style()
  accent_style()
}

skinparam entity {
  basic_style()
  accent_style()
}

' State diagrams

skinparam state {
  basic_style()
  arrow_style()
  startColor $ACCENT
  endColor $ACCENTDARK
}

' Object diagrams

skinparam object {
  basic_style()
  arrow_style()
}

' Common

skinparam note {
  basic_style()
  accent_style()
}

skinparam cloud {
  basic_style()
  arrow_style()
}

skinparam rectangle {
  basic_style()
}

skinparam storage {
  basic_style()
}